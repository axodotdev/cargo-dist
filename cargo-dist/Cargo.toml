[package]
name = "dist"
description = "Shippable application packaging for Rust"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
rust-version.workspace = true
readme = "../README.md"
exclude = [
  "book/*",
  "src/snapshots/*",
  "src/tests/",
  "tests/",
]

[[bin]]
name = "dist"
path = "src/main.rs"

[features]
# Use bleeding edge features that might mess up people using 'cargo install'
# with older toolchains. This is used for our prebuilt binaries.
fear_no_msrv = ["axoprocess/stdout_to_stderr_modern"]
tls_native_roots = ["axoasset/tls-native-roots", "gazenot/tls-native-roots", "axoupdater/tls_native_roots"]

[dependencies]
# Features only used by the cli
clap.workspace = true
serde_json.workspace = true
console.workspace = true
clap-cargo.workspace = true
axocli.workspace = true
axoupdater.workspace = true

# Features used by the cli and library
dist-schema.workspace = true
axoproject.workspace = true

axotag.workspace = true
axoasset.workspace = true
axoprocess.workspace = true
gazenot.workspace = true

comfy-table.workspace = true
miette.workspace = true
thiserror.workspace = true
tracing.workspace = true
serde.workspace = true
cargo_metadata.workspace = true
camino.workspace = true
semver.workspace = true
newline-converter.workspace = true
dialoguer.workspace = true
sha2.workspace = true
minijinja.workspace = true
include_dir.workspace = true
itertools.workspace = true
cargo-wix.workspace = true
uuid.workspace = true
mach_object.workspace = true
goblin.workspace = true
similar.workspace = true
tokio.workspace = true
temp-dir.workspace = true
sha3.workspace = true
blake2.workspace = true
spdx.workspace = true
base64.workspace = true
lazy_static.workspace = true
current_platform.workspace = true
color-backtrace.workspace = true
backtrace.workspace = true
schemars.workspace = true

[dev-dependencies]
insta.workspace = true
tar.workspace = true
flate2.workspace = true
pretty_assertions.workspace = true

[package.metadata.dist]
features = ["fear_no_msrv", "tls_native_roots"]
npm-package = "dist"

[package.metadata.release]
pre-release-replacements = [
  {file="../CHANGELOG.md", search="# Unreleased", replace="# Unreleased\n\nNothing Yet!\n\n\n# Version {{version}} ({{date}})", exactly=1},
]
